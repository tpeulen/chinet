<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_mongo_object" kind="class" language="C++" prot="public">
    <compoundname>MongoObject</compoundname>
    <derivedcompoundref refid="class_base_port" prot="public" virt="non-virtual">BasePort</derivedcompoundref>
    <derivedcompoundref refid="class_node" prot="public" virt="non-virtual">Node</derivedcompoundref>
    <derivedcompoundref refid="class_session" prot="public" virt="non-virtual">Session</derivedcompoundref>
    <includes refid="_mongo_object_8h" local="no">MongoObject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mongo_object_1a82fa8acb9bf94a11c96b99df5dfce4dd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MongoObject::is_connected_to_db_</definition>
        <argsstring></argsstring>
        <name>is_connected_to_db_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="23" column="1" bodyfile="include/MongoObject.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a7d9903e2a40fce71e60c52264f6ce2e1" prot="private" static="no" mutable="no">
        <type>mongoc_uri_t *</type>
        <definition>mongoc_uri_t* MongoObject::uri</definition>
        <argsstring></argsstring>
        <name>uri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="25" column="1" bodyfile="include/MongoObject.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a42cf937e680e83b359e1d2f5aa4ab2e4" prot="private" static="no" mutable="no">
        <type>mongoc_client_t *</type>
        <definition>mongoc_client_t* MongoObject::client</definition>
        <argsstring></argsstring>
        <name>client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="26" column="1" bodyfile="include/MongoObject.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a211f47c905388267631655e17bac6232" prot="private" static="no" mutable="no">
        <type>bson_error_t</type>
        <definition>bson_error_t MongoObject::error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="27" column="1" bodyfile="include/MongoObject.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a27cc8f4cb4aa6f6bdc5fd64e78d03dd7" prot="private" static="no" mutable="no">
        <type>mongoc_collection_t *</type>
        <definition>mongoc_collection_t* MongoObject::collection</definition>
        <argsstring></argsstring>
        <name>collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="28" column="1" bodyfile="include/MongoObject.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_mongo_object_1a451655d98b9b515d856f7178b46e4b01" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MongoObject::object_name</definition>
        <argsstring></argsstring>
        <name>object_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="33" column="1" bodyfile="include/MongoObject.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1aa143fbe117d6c12baf222be25555947b" prot="protected" static="no" mutable="no">
        <type>bson_t</type>
        <definition>bson_t MongoObject::document</definition>
        <argsstring></argsstring>
        <name>document</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="35" column="1" bodyfile="include/MongoObject.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a71e3fa5196ad3b496d0aa326d61e84e8" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MongoObject::uri_string</definition>
        <argsstring></argsstring>
        <name>uri_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="37" column="1" bodyfile="include/MongoObject.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a215dc4379af5ac81e19d245f5d5d37e0" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MongoObject::db_string</definition>
        <argsstring></argsstring>
        <name>db_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="38" column="1" bodyfile="include/MongoObject.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1ace5148b45dd674c73077a044d0233ed8" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MongoObject::app_string</definition>
        <argsstring></argsstring>
        <name>app_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="39" column="1" bodyfile="include/MongoObject.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a59d2d926fd2f8048b1dab88b3e1fea5b" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MongoObject::collection_string</definition>
        <argsstring></argsstring>
        <name>collection_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="40" column="1" bodyfile="include/MongoObject.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a020a40224a752e6036d49ec22474d616" prot="protected" static="no" mutable="no">
        <type>bson_oid_t</type>
        <definition>bson_oid_t MongoObject::oid_document</definition>
        <argsstring></argsstring>
        <name>oid_document</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="42" column="1" bodyfile="include/MongoObject.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a4905c165b7b18f471ee56f8eb3f5e0f1" prot="protected" static="no" mutable="no">
        <type>bson_oid_t</type>
        <definition>bson_oid_t MongoObject::oid_precursor</definition>
        <argsstring></argsstring>
        <name>oid_precursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="43" column="1" bodyfile="include/MongoObject.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mongo_object_1a0ced4ff82fbee4e7213715994d690380" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t MongoObject::time_of_death</definition>
        <argsstring></argsstring>
        <name>time_of_death</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="44" column="1" bodyfile="include/MongoObject.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_mongo_object_1aaca278b427d042a63caf2962b5e76043" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bson_oid_t</type>
        <definition>bson_oid_t MongoObject::get_bson_oid</definition>
        <argsstring>()</argsstring>
        <name>get_bson_oid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ac21cbe104a818f7e6ee7dcfbb521e9e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bson_t</type>
        <definition>virtual bson_t MongoObject::get_bson</definition>
        <argsstring>()</argsstring>
        <name>get_bson</name>
        <reimplementedby refid="class_session_1aa517fe6138a0cc32e27ddf1eb7331520">get_bson</reimplementedby>
        <reimplementedby refid="class_node_1a9568e1bba3436d78e77862902e328592">get_bson</reimplementedby>
        <reimplementedby refid="class_value_port_1a9b241081b386fe6de942ffce150b7eda">get_bson</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ac35c66d91e7297eb46313b98d01751cb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bson_t</type>
        <definition>bson_t MongoObject::get_bson_excluding</definition>
        <argsstring>(const char *first,...)</argsstring>
        <name>get_bson_excluding</name>
        <param>
          <type>const char *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a196ea1b747a08f7ab525b8851ebc0b51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const bson_t *</type>
        <definition>const bson_t* MongoObject::get_document</definition>
        <argsstring>()</argsstring>
        <name>get_document</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1adb597533d8e167c3d6bafd28baef349c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void</type>
        <definition>const void MongoObject::set_document</definition>
        <argsstring>(bson_t b)</argsstring>
        <name>set_document</name>
        <param>
          <type>bson_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="57" column="1" bodyfile="include/MongoObject.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae51714acc607a67518862306fac509ee" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void</type>
        <definition>const void MongoObject::set_document</definition>
        <argsstring>(bson_t *doc)</argsstring>
        <name>set_document</name>
        <param>
          <type>bson_t *</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="61" column="1" bodyfile="include/MongoObject.h" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ab43c880a2ae99890946e7edf3d232e5a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::write_to_db</definition>
        <argsstring>(const bson_t &amp;doc, int write_option=0)</argsstring>
        <name>write_to_db</name>
        <param>
          <type>const bson_t &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>write_option</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Writes a BSON document to the connected MongoDB. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to the BSON document that is written to the MongoDB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>write_option</parametername>
</parameternamelist>
<parameterdescription>
<para>integer specifying the write mode - 1: replaces the document (no upsert), 2: insert the document das a new document, default: updates an existing document.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of a successful write. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1aecd244620f292e8368d1f593925eafbd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::read_from_db</definition>
        <argsstring>()</argsstring>
        <name>read_from_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae8d85ac8089beca73773bd6189a2530c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MongoObject::create_oid_dict_in_doc</definition>
        <argsstring>(bson_t *doc, std::string key, const std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; &amp;mongo_obj_array)</argsstring>
        <name>create_oid_dict_in_doc</name>
        <param>
          <type>bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; &amp;</type>
          <declname>mongo_obj_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="83" column="1" bodyfile="include/MongoObject.h" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a56dccd703ae3e3e2193d57d31df12fd0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MongoObject::append_number_array</definition>
        <argsstring>(bson_t *doc, std::string key, T &amp;values)</argsstring>
        <name>append_number_array</name>
        <param>
          <type>bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="98" column="1" bodyfile="include/MongoObject.h" bodystart="98" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a0b94ea01312b792e42b944399a4eb45c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MongoObject::create_oid_array_in_doc</definition>
        <argsstring>(bson_t *doc, std::string target_field_name, const std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; &amp;mongo_obj_array)</argsstring>
        <name>create_oid_array_in_doc</name>
        <param>
          <type>bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>target_field_name</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; &amp;</type>
          <declname>mongo_obj_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="122" column="1" bodyfile="include/MongoObject.h" bodystart="122" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ab879c65bc54d59dc56cc0ca652756e10" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool MongoObject::create_and_connect_objects_from_oid_doc</definition>
        <argsstring>(const bson_t *doc, const char *document_name, std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; *target_map)</argsstring>
        <name>create_and_connect_objects_from_oid_doc</name>
        <param>
          <type>const bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>document_name</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; *</type>
          <declname>target_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="137" column="1" bodyfile="include/MongoObject.h" bodystart="137" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a830f8d398209664c866f2c437667cc5a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool MongoObject::create_and_connect_objects_from_oid_array</definition>
        <argsstring>(const bson_t *doc, const char *array_name, std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; *target_map)</argsstring>
        <name>create_and_connect_objects_from_oid_array</name>
        <param>
          <type>const bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>array_name</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::shared_ptr&lt; T &gt;&gt; *</type>
          <declname>target_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="177" column="1" bodyfile="include/MongoObject.h" bodystart="177" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_mongo_object_1ab659c54f28b5e13c6cb2fc0fc8ad4635" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void MongoObject::append_string</definition>
        <argsstring>(bson_t *dst, std::string key, std::string content, size_t size=0)</argsstring>
        <name>append_string</name>
        <param>
          <type>bson_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>content</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a33799f83d7343fc5385869f5a907aeea" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>static const std::string MongoObject::get_string_by_key</definition>
        <argsstring>(bson_t *doc, std::string key)</argsstring>
        <name>get_string_by_key</name>
        <param>
          <type>bson_t *</type>
          <declname>doc</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a9592c8baaed700c358dc26025e3bf166" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string MongoObject::oid_to_string</definition>
        <argsstring>(bson_oid_t oid)</argsstring>
        <name>oid_to_string</name>
        <param>
          <type>bson_oid_t</type>
          <declname>oid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="216" column="1" bodyfile="include/MongoObject.h" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae9bff3fe8b82864f36e6cb7aa8f159b0" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MongoObject::string_to_oid</definition>
        <argsstring>(const std::string &amp;oid_string, bson_oid_t *oid)</argsstring>
        <name>string_to_oid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>oid_string</declname>
        </param>
        <param>
          <type>bson_oid_t *</type>
          <declname>oid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="222" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mongo_object_1ae0438efeae33db2bfeb3972e1196a8a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MongoObject::MongoObject</definition>
        <argsstring>()</argsstring>
        <name>MongoObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a9e876f9d6e7cfcb7d4ce9046014e2b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MongoObject::MongoObject</definition>
        <argsstring>(std::string name)</argsstring>
        <name>MongoObject</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ac1aba6b5189bca3feb08a698a01c1c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MongoObject::~MongoObject</definition>
        <argsstring>()</argsstring>
        <name>~MongoObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a7ef98cecb5c625a9c3e9a57373be41b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::connect_to_db</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;db_string, const std::string &amp;app_string, const std::string &amp;collection_string)</argsstring>
        <name>connect_to_db</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>db_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>app_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>collection_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uri_string</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db_string</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>app_string</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collection_string</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1adbb80b6af3e780c81cc455f480507749" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool MongoObject::connect_object_to_db</definition>
        <argsstring>(T o)</argsstring>
        <name>connect_object_to_db</name>
        <param>
          <type>T</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="247" column="1" bodyfile="include/MongoObject.h" bodystart="247" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae541414f753a8fd792cf0be163117b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MongoObject::disconnect_from_db</definition>
        <argsstring>()</argsstring>
        <name>disconnect_from_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae67113e87e4dadcd51c23aa373eba61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::is_connected_to_db</definition>
        <argsstring>()</argsstring>
        <name>is_connected_to_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a65971bad07dce8b649820f9dee5d0ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MongoObject::write_to_db</definition>
        <argsstring>()</argsstring>
        <name>write_to_db</name>
        <reimplementedby refid="class_session_1a513e5436b4c990985300246bb39d9f5c">write_to_db</reimplementedby>
        <reimplementedby refid="class_node_1ad5cacb320e423275faef1bfc8c7a365b">write_to_db</reimplementedby>
        <reimplementedby refid="class_value_port_1a85845e2f4ee6cd21ffcd3942e60886ea">write_to_db</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ad5165ed92020fba7d502a3556794ab4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string MongoObject::create_copy</definition>
        <argsstring>()</argsstring>
        <name>create_copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a729412e226c9964e13ba80688c3f5e00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MongoObject::read_from_db</definition>
        <argsstring>(const std::string &amp;oid_string)</argsstring>
        <name>read_from_db</name>
        <reimplementedby refid="class_session_1a4f09644fd155a1d5640cedefe4aa42fc">read_from_db</reimplementedby>
        <reimplementedby refid="class_node_1a60c605aced4420d3d6f6fe54b5a5b6bb">read_from_db</reimplementedby>
        <reimplementedby refid="class_value_port_1aacece741e134ac67f447e7e1d0822bca">read_from_db</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>oid_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1acde33629416d7f926737237264ac6ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string MongoObject::get_json</definition>
        <argsstring>()</argsstring>
        <name>get_json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1adce8ffc4811a9d1c94701711f574bc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::read_json</definition>
        <argsstring>(std::string json_string)</argsstring>
        <name>read_json</name>
        <param>
          <type>std::string</type>
          <declname>json_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ad155a8808f999f8e3dd0cfc055b33e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string MongoObject::get_oid</definition>
        <argsstring>()</argsstring>
        <name>get_oid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ac999ffe6b9b2ca261adff1eaf9da7e98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MongoObject::set_name</definition>
        <argsstring>(std::string name)</argsstring>
        <name>set_name</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="274" column="1" bodyfile="include/MongoObject.h" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1abd49d2dcea0ce5f49ebe9a8a9df97164" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string MongoObject::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <reimplementedby refid="class_node_1a0cc0386322fca056e49e49d869ade853">get_name</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="278" column="1" bodyfile="include/MongoObject.h" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1af0cf1568e5b1b87a971e93bba4ec0a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T MongoObject::get_singleton</definition>
        <argsstring>(const char *key)</argsstring>
        <name>get_singleton</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="283" column="1" bodyfile="include/MongoObject.h" bodystart="283" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a03a0d78b1f206aca81ff746edcd57c81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MongoObject::set_singleton</definition>
        <argsstring>(const char *key, T value)</argsstring>
        <name>set_singleton</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="308" column="1" bodyfile="include/MongoObject.h" bodystart="308" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a9e80e38e5a4f40754ef48f2504e1613c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MongoObject::set_oid</definition>
        <argsstring>(const char *key, bson_oid_t value)</argsstring>
        <name>set_oid</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bson_oid_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ae1002573afb58658162fb7f53cd0bffc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; MongoObject::get_array</definition>
        <argsstring>(const char *key)</argsstring>
        <name>get_array</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="339" column="1" bodyfile="include/MongoObject.h" bodystart="339" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1ac251f38eef739fb9e1418a20e7fcc7f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MongoObject::set_array</definition>
        <argsstring>(const char *key, std::vector&lt; T &gt; value)</argsstring>
        <name>set_array</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="383" column="1" bodyfile="include/MongoObject.h" bodystart="383" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a9f71ae755dac1db3e37cdee85329d163" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string MongoObject::get_json</definition>
        <argsstring>(const char *key)</argsstring>
        <name>get_json</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="394" column="1" bodyfile="include/MongoObject.h" bodystart="394" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a89f7e282816b6dd93d4df4ee7ca9bd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="class_mongo_object" kindref="compound">MongoObject</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;MongoObject&gt; MongoObject::operator[]</definition>
        <argsstring>(std::string key)</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_mongo_object_1a0050194f5bc8690e0db3b8217086e421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MongoObject::operator==</definition>
        <argsstring>(MongoObject const &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_mongo_object" kindref="compound">MongoObject</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MongoObject.h" line="429" column="1" bodyfile="include/MongoObject.h" bodystart="429" bodyend="434"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Connects the instance of database. </para>    </briefdescription>
    <detaileddescription>
<para>Returns true if the instance of the to the DB.</para><para>Disconnects the the DB. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="26">
        <label>BasePort</label>
        <link refid="class_base_port"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>ValuePort</label>
        <link refid="class_value_port"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>Port</label>
        <link refid="class_port"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>MongoObject</label>
        <link refid="class_mongo_object"/>
      </node>
      <node id="30">
        <label>Session</label>
        <link refid="class_session"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="33">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="31">
        <label>MongoObject</label>
        <link refid="class_mongo_object"/>
        <childnode refid="32" relation="usage">
          <edgelabel>#db_string</edgelabel>
          <edgelabel>#collection_string</edgelabel>
          <edgelabel>#app_string</edgelabel>
          <edgelabel>#object_name</edgelabel>
          <edgelabel>#uri_string</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::string</label>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/MongoObject.h" line="19" column="1" bodyfile="include/MongoObject.h" bodystart="19" bodyend="436"/>
    <listofallmembers>
      <member refid="class_mongo_object_1ace5148b45dd674c73077a044d0233ed8" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>app_string</name></member>
      <member refid="class_mongo_object_1a56dccd703ae3e3e2193d57d31df12fd0" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>append_number_array</name></member>
      <member refid="class_mongo_object_1ab659c54f28b5e13c6cb2fc0fc8ad4635" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>append_string</name></member>
      <member refid="class_mongo_object_1a42cf937e680e83b359e1d2f5aa4ab2e4" prot="private" virt="non-virtual"><scope>MongoObject</scope><name>client</name></member>
      <member refid="class_mongo_object_1a27cc8f4cb4aa6f6bdc5fd64e78d03dd7" prot="private" virt="non-virtual"><scope>MongoObject</scope><name>collection</name></member>
      <member refid="class_mongo_object_1a59d2d926fd2f8048b1dab88b3e1fea5b" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>collection_string</name></member>
      <member refid="class_mongo_object_1adbb80b6af3e780c81cc455f480507749" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>connect_object_to_db</name></member>
      <member refid="class_mongo_object_1a7ef98cecb5c625a9c3e9a57373be41b8" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>connect_to_db</name></member>
      <member refid="class_mongo_object_1a830f8d398209664c866f2c437667cc5a" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>create_and_connect_objects_from_oid_array</name></member>
      <member refid="class_mongo_object_1ab879c65bc54d59dc56cc0ca652756e10" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>create_and_connect_objects_from_oid_doc</name></member>
      <member refid="class_mongo_object_1ad5165ed92020fba7d502a3556794ab4f" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>create_copy</name></member>
      <member refid="class_mongo_object_1a0b94ea01312b792e42b944399a4eb45c" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>create_oid_array_in_doc</name></member>
      <member refid="class_mongo_object_1ae8d85ac8089beca73773bd6189a2530c" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>create_oid_dict_in_doc</name></member>
      <member refid="class_mongo_object_1a215dc4379af5ac81e19d245f5d5d37e0" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>db_string</name></member>
      <member refid="class_mongo_object_1ae541414f753a8fd792cf0be163117b99" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>disconnect_from_db</name></member>
      <member refid="class_mongo_object_1aa143fbe117d6c12baf222be25555947b" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>document</name></member>
      <member refid="class_mongo_object_1a211f47c905388267631655e17bac6232" prot="private" virt="non-virtual"><scope>MongoObject</scope><name>error</name></member>
      <member refid="class_mongo_object_1ae1002573afb58658162fb7f53cd0bffc" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>get_array</name></member>
      <member refid="class_mongo_object_1ac21cbe104a818f7e6ee7dcfbb521e9e1" prot="protected" virt="virtual"><scope>MongoObject</scope><name>get_bson</name></member>
      <member refid="class_mongo_object_1ac35c66d91e7297eb46313b98d01751cb" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>get_bson_excluding</name></member>
      <member refid="class_mongo_object_1aaca278b427d042a63caf2962b5e76043" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>get_bson_oid</name></member>
      <member refid="class_mongo_object_1a196ea1b747a08f7ab525b8851ebc0b51" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>get_document</name></member>
      <member refid="class_mongo_object_1acde33629416d7f926737237264ac6ca1" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>get_json</name></member>
      <member refid="class_mongo_object_1a9f71ae755dac1db3e37cdee85329d163" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>get_json</name></member>
      <member refid="class_mongo_object_1abd49d2dcea0ce5f49ebe9a8a9df97164" prot="public" virt="virtual"><scope>MongoObject</scope><name>get_name</name></member>
      <member refid="class_mongo_object_1ad155a8808f999f8e3dd0cfc055b33e2a" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>get_oid</name></member>
      <member refid="class_mongo_object_1af0cf1568e5b1b87a971e93bba4ec0a40" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>get_singleton</name></member>
      <member refid="class_mongo_object_1a33799f83d7343fc5385869f5a907aeea" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>get_string_by_key</name></member>
      <member refid="class_mongo_object_1ae67113e87e4dadcd51c23aa373eba61d" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>is_connected_to_db</name></member>
      <member refid="class_mongo_object_1a82fa8acb9bf94a11c96b99df5dfce4dd" prot="private" virt="non-virtual"><scope>MongoObject</scope><name>is_connected_to_db_</name></member>
      <member refid="class_mongo_object_1ae0438efeae33db2bfeb3972e1196a8a9" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>MongoObject</name></member>
      <member refid="class_mongo_object_1a9e876f9d6e7cfcb7d4ce9046014e2b5f" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>MongoObject</name></member>
      <member refid="class_mongo_object_1a451655d98b9b515d856f7178b46e4b01" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>object_name</name></member>
      <member refid="class_mongo_object_1a020a40224a752e6036d49ec22474d616" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>oid_document</name></member>
      <member refid="class_mongo_object_1a4905c165b7b18f471ee56f8eb3f5e0f1" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>oid_precursor</name></member>
      <member refid="class_mongo_object_1a9592c8baaed700c358dc26025e3bf166" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>oid_to_string</name></member>
      <member refid="class_mongo_object_1a0050194f5bc8690e0db3b8217086e421" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>operator==</name></member>
      <member refid="class_mongo_object_1a89f7e282816b6dd93d4df4ee7ca9bd0a" prot="public" virt="virtual"><scope>MongoObject</scope><name>operator[]</name></member>
      <member refid="class_mongo_object_1aecd244620f292e8368d1f593925eafbd" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>read_from_db</name></member>
      <member refid="class_mongo_object_1a729412e226c9964e13ba80688c3f5e00" prot="public" virt="virtual"><scope>MongoObject</scope><name>read_from_db</name></member>
      <member refid="class_mongo_object_1adce8ffc4811a9d1c94701711f574bc34" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>read_json</name></member>
      <member refid="class_mongo_object_1ac251f38eef739fb9e1418a20e7fcc7f7" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>set_array</name></member>
      <member refid="class_mongo_object_1adb597533d8e167c3d6bafd28baef349c" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>set_document</name></member>
      <member refid="class_mongo_object_1ae51714acc607a67518862306fac509ee" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>set_document</name></member>
      <member refid="class_mongo_object_1ac999ffe6b9b2ca261adff1eaf9da7e98" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>set_name</name></member>
      <member refid="class_mongo_object_1a9e80e38e5a4f40754ef48f2504e1613c" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>set_oid</name></member>
      <member refid="class_mongo_object_1a03a0d78b1f206aca81ff746edcd57c81" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>set_singleton</name></member>
      <member refid="class_mongo_object_1ae9bff3fe8b82864f36e6cb7aa8f159b0" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>string_to_oid</name></member>
      <member refid="class_mongo_object_1a0ced4ff82fbee4e7213715994d690380" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>time_of_death</name></member>
      <member refid="class_mongo_object_1a7d9903e2a40fce71e60c52264f6ce2e1" prot="private" virt="non-virtual"><scope>MongoObject</scope><name>uri</name></member>
      <member refid="class_mongo_object_1a71e3fa5196ad3b496d0aa326d61e84e8" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>uri_string</name></member>
      <member refid="class_mongo_object_1ab43c880a2ae99890946e7edf3d232e5a" prot="protected" virt="non-virtual"><scope>MongoObject</scope><name>write_to_db</name></member>
      <member refid="class_mongo_object_1a65971bad07dce8b649820f9dee5d0ae8" prot="public" virt="virtual"><scope>MongoObject</scope><name>write_to_db</name></member>
      <member refid="class_mongo_object_1ac1aba6b5189bca3feb08a698a01c1c30" prot="public" virt="non-virtual"><scope>MongoObject</scope><name>~MongoObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
