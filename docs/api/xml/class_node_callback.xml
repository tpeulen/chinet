<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_node_callback" kind="class" language="C++" prot="public">
    <compoundname>NodeCallback</compoundname>
    <includes refid="_node_callback_8h" local="no">NodeCallback.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_node_callback_1a94eb8c2fd7162ffcc4abff8bd2e852b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void NodeCallback::run</definition>
        <argsstring>(std::map&lt; std::string, std::shared_ptr&lt; Port &gt;&gt;, std::map&lt; std::string, std::shared_ptr&lt; Port &gt;&gt;)</argsstring>
        <name>run</name>
        <param>
          <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;&gt;</type>
        </param>
        <param>
          <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;&gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NodeCallback.h" line="22" column="1" bodyfile="include/NodeCallback.h" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_node_callback_1a91f8bc71a7bc6164d831ab4fb8144810" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NodeCallback::NodeCallback</definition>
        <argsstring>()</argsstring>
        <name>NodeCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NodeCallback.h" line="29" column="1" bodyfile="include/NodeCallback.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_node_callback_1ac9474867612b9fa6327dfe5cc5d29bec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual NodeCallback::~NodeCallback</definition>
        <argsstring>()</argsstring>
        <name>~NodeCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NodeCallback.h" line="30" column="1" bodyfile="include/NodeCallback.h" bodystart="30" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="28">
        <label>NodeCallback</label>
        <link refid="class_node_callback"/>
      </node>
    </collaborationgraph>
    <location file="include/NodeCallback.h" line="19" column="1" bodyfile="include/NodeCallback.h" bodystart="19" bodyend="31"/>
    <listofallmembers>
      <member refid="class_node_callback_1a91f8bc71a7bc6164d831ab4fb8144810" prot="public" virt="non-virtual"><scope>NodeCallback</scope><name>NodeCallback</name></member>
      <member refid="class_node_callback_1a94eb8c2fd7162ffcc4abff8bd2e852b3" prot="public" virt="virtual"><scope>NodeCallback</scope><name>run</name></member>
      <member refid="class_node_callback_1ac9474867612b9fa6327dfe5cc5d29bec" prot="public" virt="virtual"><scope>NodeCallback</scope><name>~NodeCallback</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
