<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_node" kind="class" language="C++" prot="public">
    <compoundname>Node</compoundname>
    <basecompoundref refid="class_mongo_object" prot="public" virt="non-virtual">MongoObject</basecompoundref>
    <includes refid="_node_8h" local="no">Node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_node_1abb83a3d891735392a59a1270f4db38fc" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Node::Port</definition>
        <argsstring></argsstring>
        <name>Port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="24" column="1" bodyfile="include/Node.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a9ee0e6a44b0e394176e728694122efc9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Node::node_valid_</definition>
        <argsstring></argsstring>
        <name>node_valid_</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="26" column="1" bodyfile="include/Node.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1ae519513035293daedb1c84b3a150c7c3" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::ports</definition>
        <argsstring></argsstring>
        <name>ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="27" column="1" bodyfile="include/Node.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_node_1a34e4ef7089672adaa8aa31277aa5f159" prot="protected" static="no" mutable="no">
        <type>rttr::method</type>
        <definition>rttr::method Node::meth_</definition>
        <argsstring></argsstring>
        <name>meth_</name>
        <initializer>= rttr::type::get_global_method(&quot;nothing&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="34" column="1" bodyfile="include/Node.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a2970ced9f376dd6c5d512d0bbb7cbb54" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::in_</definition>
        <argsstring></argsstring>
        <name>in_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="35" column="1" bodyfile="include/Node.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a324497db3924989e08e8ee0411d5972e" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::out_</definition>
        <argsstring></argsstring>
        <name>out_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="36" column="1" bodyfile="include/Node.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a3755609fd44cf5b86c8a7d1f94d9747b" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Node::callback</definition>
        <argsstring></argsstring>
        <name>callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="38" column="1" bodyfile="include/Node.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1aa6465260fcaaecbb7bc8847dbbeb3ba6" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Node::callback_type_string</definition>
        <argsstring></argsstring>
        <name>callback_type_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="39" column="1" bodyfile="include/Node.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_node_1a290c95a63ae639d150355764ea1f4b54" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Node::callback_type</definition>
        <argsstring></argsstring>
        <name>callback_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="40" column="1" bodyfile="include/Node.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_node_1a9bc5e92a6565a4addbbcadea93889e85" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_node_callback" kindref="compound">NodeCallback</ref> &gt;</type>
        <definition>std::shared_ptr&lt;NodeCallback&gt; Node::callback_class</definition>
        <argsstring></argsstring>
        <name>callback_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a function that operates on an input <ref refid="class_port" kindref="compound">Port</ref> instance (first argument) and writes to an output <ref refid="class_port" kindref="compound">Port</ref> instance (second argument) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="46" column="1" bodyfile="include/Node.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_node_1a4ef31790680213bff2306ec34941941c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::fill_input_output_port_lookups</definition>
        <argsstring>()</argsstring>
        <name>fill_input_output_port_lookups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="33" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1afceb8877cfab44e0eda5ae3a88513242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::Node</definition>
        <argsstring>(std::string name)</argsstring>
        <name>Node</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1acdcee054c893b696b5bc08a8eba1a668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::Node</definition>
        <argsstring>(std::map&lt; std::string, std::shared_ptr&lt; Port &gt;&gt; ports)</argsstring>
        <name>Node</name>
        <param>
          <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;&gt;</type>
          <declname>ports</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1aa0840c3cb5c7159be6d992adecd2097c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a60c605aced4420d3d6f6fe54b5a5b6bb" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Node::read_from_db</definition>
        <argsstring>(const std::string &amp;oid_string) final</argsstring>
        <name>read_from_db</name>
        <reimplements refid="class_mongo_object_1a729412e226c9964e13ba80688c3f5e00">read_from_db</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>oid_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a0a3c8430a9e5b6b725c87bbcf7adc54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::evaluate</definition>
        <argsstring>()</argsstring>
        <name>evaluate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a8d821a6df3cd9504fefc551d5bd0a64f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Node::is_valid</definition>
        <argsstring>()</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1adb04f5aa8b454b19db663b3f240e9061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Node::inputs_valid</definition>
        <argsstring>()</argsstring>
        <name>inputs_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1ad5cacb320e423275faef1bfc8c7a365b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Node::write_to_db</definition>
        <argsstring>() final</argsstring>
        <name>write_to_db</name>
        <reimplements refid="class_mongo_object_1a65971bad07dce8b649820f9dee5d0ae8">write_to_db</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a9568e1bba3436d78e77862902e328592" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bson_t</type>
        <definition>bson_t Node::get_bson</definition>
        <argsstring>()</argsstring>
        <name>get_bson</name>
        <reimplements refid="class_mongo_object_1ac21cbe104a818f7e6ee7dcfbb521e9e1">get_bson</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a0cc0386322fca056e49e49d869ade853" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string Node::get_name</definition>
        <argsstring>()</argsstring>
        <name>get_name</name>
        <reimplements refid="class_mongo_object_1abd49d2dcea0ce5f49ebe9a8a9df97164">get_name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1aab2f990047525bd3bfe7be041a8a201c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::get_input_ports</definition>
        <argsstring>()</argsstring>
        <name>get_input_ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a060160b85a15190fcf98fa0a3f9ec4e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::get_output_ports</definition>
        <argsstring>()</argsstring>
        <name>get_output_ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a90fc0096ba3a5094f0696dde1dd5b08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::shared_ptr&lt;Port&gt; &gt; Node::get_ports</definition>
        <argsstring>()</argsstring>
        <name>get_ports</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a71b857799058e56ccb9593a69fc675bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Port&gt; Node::get_port</definition>
        <argsstring>(const std::string &amp;port_name)</argsstring>
        <name>get_port</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a139ab3c04753749cc35d2ff8c268c248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::add_port</definition>
        <argsstring>(std::string key, std::shared_ptr&lt; Port &gt;, bool is_source, bool fill_in_out=true)</argsstring>
        <name>add_port</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        </param>
        <param>
          <type>bool</type>
          <declname>is_source</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fill_in_out</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1ac0b67acb7c270cf38579356325ee6e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::add_input_port</definition>
        <argsstring>(std::string key, std::shared_ptr&lt; Port &gt;)</argsstring>
        <name>add_input_port</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a9df0ba6b43f1b59fd0bce26470b906ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::add_output_port</definition>
        <argsstring>(std::string key, std::shared_ptr&lt; Port &gt;)</argsstring>
        <name>add_output_port</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a89e7f8e74b09395e5a2362bcef664ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Port&gt; Node::get_input_port</definition>
        <argsstring>(const std::string &amp;port_name)</argsstring>
        <name>get_input_port</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a98f6937be16c29da2ea37b0ad51cb463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_port" kindref="compound">Port</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Port&gt; Node::get_output_port</definition>
        <argsstring>(const std::string &amp;port_name)</argsstring>
        <name>get_output_port</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>port_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1a924146fb76ec67a78971f91e93418527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::set_callback</definition>
        <argsstring>(std::shared_ptr&lt; NodeCallback &gt; cb)</argsstring>
        <name>set_callback</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="class_node_callback" kindref="compound">NodeCallback</ref> &gt;</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1afda492d07d8c3ed0e714d0249e015ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::set_callback</definition>
        <argsstring>(std::string callback, std::string callback_type)</argsstring>
        <name>set_callback</name>
        <param>
          <type>std::string</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>callback_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_node_1ab9fe9ebcddc19a16dc518fd29e584da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Node::set_node_to_invalid</definition>
        <argsstring>()</argsstring>
        <name>set_node_to_invalid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Node.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="34">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>MongoObject</label>
        <link refid="class_mongo_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="40">
        <label>std::map&lt; std::string, std::shared_ptr&lt; Port &gt; &gt;</label>
        <childnode refid="38" relation="usage">
          <edgelabel>+keys</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>#callback</edgelabel>
          <edgelabel>#callback_type_string</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>#out_</edgelabel>
          <edgelabel>#in_</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="37">
        <label>MongoObject</label>
        <link refid="class_mongo_object"/>
        <childnode refid="38" relation="usage">
          <edgelabel>#db_string</edgelabel>
          <edgelabel>#collection_string</edgelabel>
          <edgelabel>#app_string</edgelabel>
          <edgelabel>#object_name</edgelabel>
          <edgelabel>#uri_string</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::string</label>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/Node.h" line="21" column="1" bodyfile="include/Node.h" bodystart="21" bodyend="86"/>
    <listofallmembers>
      <member refid="class_node_1ac0b67acb7c270cf38579356325ee6e9c" prot="public" virt="non-virtual"><scope>Node</scope><name>add_input_port</name></member>
      <member refid="class_node_1a9df0ba6b43f1b59fd0bce26470b906ba" prot="public" virt="non-virtual"><scope>Node</scope><name>add_output_port</name></member>
      <member refid="class_node_1a139ab3c04753749cc35d2ff8c268c248" prot="public" virt="non-virtual"><scope>Node</scope><name>add_port</name></member>
      <member refid="class_mongo_object_1ace5148b45dd674c73077a044d0233ed8" prot="protected" virt="non-virtual"><scope>Node</scope><name>app_string</name></member>
      <member refid="class_mongo_object_1a56dccd703ae3e3e2193d57d31df12fd0" prot="protected" virt="non-virtual"><scope>Node</scope><name>append_number_array</name></member>
      <member refid="class_mongo_object_1ab659c54f28b5e13c6cb2fc0fc8ad4635" prot="protected" virt="non-virtual"><scope>Node</scope><name>append_string</name></member>
      <member refid="class_node_1a3755609fd44cf5b86c8a7d1f94d9747b" prot="protected" virt="non-virtual"><scope>Node</scope><name>callback</name></member>
      <member refid="class_node_1a9bc5e92a6565a4addbbcadea93889e85" prot="public" virt="non-virtual"><scope>Node</scope><name>callback_class</name></member>
      <member refid="class_node_1a290c95a63ae639d150355764ea1f4b54" prot="protected" virt="non-virtual"><scope>Node</scope><name>callback_type</name></member>
      <member refid="class_node_1aa6465260fcaaecbb7bc8847dbbeb3ba6" prot="protected" virt="non-virtual"><scope>Node</scope><name>callback_type_string</name></member>
      <member refid="class_mongo_object_1a59d2d926fd2f8048b1dab88b3e1fea5b" prot="protected" virt="non-virtual"><scope>Node</scope><name>collection_string</name></member>
      <member refid="class_mongo_object_1adbb80b6af3e780c81cc455f480507749" prot="public" virt="non-virtual"><scope>Node</scope><name>connect_object_to_db</name></member>
      <member refid="class_mongo_object_1a7ef98cecb5c625a9c3e9a57373be41b8" prot="public" virt="non-virtual"><scope>Node</scope><name>connect_to_db</name></member>
      <member refid="class_mongo_object_1a830f8d398209664c866f2c437667cc5a" prot="protected" virt="non-virtual"><scope>Node</scope><name>create_and_connect_objects_from_oid_array</name></member>
      <member refid="class_mongo_object_1ab879c65bc54d59dc56cc0ca652756e10" prot="protected" virt="non-virtual"><scope>Node</scope><name>create_and_connect_objects_from_oid_doc</name></member>
      <member refid="class_mongo_object_1ad5165ed92020fba7d502a3556794ab4f" prot="public" virt="non-virtual"><scope>Node</scope><name>create_copy</name></member>
      <member refid="class_mongo_object_1a0b94ea01312b792e42b944399a4eb45c" prot="protected" virt="non-virtual"><scope>Node</scope><name>create_oid_array_in_doc</name></member>
      <member refid="class_mongo_object_1ae8d85ac8089beca73773bd6189a2530c" prot="protected" virt="non-virtual"><scope>Node</scope><name>create_oid_dict_in_doc</name></member>
      <member refid="class_mongo_object_1a215dc4379af5ac81e19d245f5d5d37e0" prot="protected" virt="non-virtual"><scope>Node</scope><name>db_string</name></member>
      <member refid="class_mongo_object_1ae541414f753a8fd792cf0be163117b99" prot="public" virt="non-virtual"><scope>Node</scope><name>disconnect_from_db</name></member>
      <member refid="class_mongo_object_1aa143fbe117d6c12baf222be25555947b" prot="protected" virt="non-virtual"><scope>Node</scope><name>document</name></member>
      <member refid="class_node_1a0a3c8430a9e5b6b725c87bbcf7adc54b" prot="public" virt="non-virtual"><scope>Node</scope><name>evaluate</name></member>
      <member refid="class_node_1a4ef31790680213bff2306ec34941941c" prot="protected" virt="non-virtual"><scope>Node</scope><name>fill_input_output_port_lookups</name></member>
      <member refid="class_mongo_object_1ae1002573afb58658162fb7f53cd0bffc" prot="public" virt="non-virtual"><scope>Node</scope><name>get_array</name></member>
      <member refid="class_node_1a9568e1bba3436d78e77862902e328592" prot="public" virt="virtual"><scope>Node</scope><name>get_bson</name></member>
      <member refid="class_mongo_object_1ac35c66d91e7297eb46313b98d01751cb" prot="protected" virt="non-virtual"><scope>Node</scope><name>get_bson_excluding</name></member>
      <member refid="class_mongo_object_1aaca278b427d042a63caf2962b5e76043" prot="protected" virt="non-virtual"><scope>Node</scope><name>get_bson_oid</name></member>
      <member refid="class_mongo_object_1a196ea1b747a08f7ab525b8851ebc0b51" prot="protected" virt="non-virtual"><scope>Node</scope><name>get_document</name></member>
      <member refid="class_node_1a89e7f8e74b09395e5a2362bcef664ee9" prot="public" virt="non-virtual"><scope>Node</scope><name>get_input_port</name></member>
      <member refid="class_node_1aab2f990047525bd3bfe7be041a8a201c" prot="public" virt="non-virtual"><scope>Node</scope><name>get_input_ports</name></member>
      <member refid="class_mongo_object_1acde33629416d7f926737237264ac6ca1" prot="public" virt="non-virtual"><scope>Node</scope><name>get_json</name></member>
      <member refid="class_mongo_object_1a9f71ae755dac1db3e37cdee85329d163" prot="public" virt="non-virtual"><scope>Node</scope><name>get_json</name></member>
      <member refid="class_node_1a0cc0386322fca056e49e49d869ade853" prot="public" virt="virtual"><scope>Node</scope><name>get_name</name></member>
      <member refid="class_mongo_object_1ad155a8808f999f8e3dd0cfc055b33e2a" prot="public" virt="non-virtual"><scope>Node</scope><name>get_oid</name></member>
      <member refid="class_node_1a98f6937be16c29da2ea37b0ad51cb463" prot="public" virt="non-virtual"><scope>Node</scope><name>get_output_port</name></member>
      <member refid="class_node_1a060160b85a15190fcf98fa0a3f9ec4e6" prot="public" virt="non-virtual"><scope>Node</scope><name>get_output_ports</name></member>
      <member refid="class_node_1a71b857799058e56ccb9593a69fc675bc" prot="public" virt="non-virtual"><scope>Node</scope><name>get_port</name></member>
      <member refid="class_node_1a90fc0096ba3a5094f0696dde1dd5b08d" prot="public" virt="non-virtual"><scope>Node</scope><name>get_ports</name></member>
      <member refid="class_mongo_object_1af0cf1568e5b1b87a971e93bba4ec0a40" prot="public" virt="non-virtual"><scope>Node</scope><name>get_singleton</name></member>
      <member refid="class_mongo_object_1a33799f83d7343fc5385869f5a907aeea" prot="protected" virt="non-virtual"><scope>Node</scope><name>get_string_by_key</name></member>
      <member refid="class_node_1a2970ced9f376dd6c5d512d0bbb7cbb54" prot="protected" virt="non-virtual"><scope>Node</scope><name>in_</name></member>
      <member refid="class_node_1adb04f5aa8b454b19db663b3f240e9061" prot="public" virt="non-virtual"><scope>Node</scope><name>inputs_valid</name></member>
      <member refid="class_mongo_object_1ae67113e87e4dadcd51c23aa373eba61d" prot="public" virt="non-virtual"><scope>Node</scope><name>is_connected_to_db</name></member>
      <member refid="class_node_1a8d821a6df3cd9504fefc551d5bd0a64f" prot="public" virt="non-virtual"><scope>Node</scope><name>is_valid</name></member>
      <member refid="class_node_1a34e4ef7089672adaa8aa31277aa5f159" prot="protected" virt="non-virtual"><scope>Node</scope><name>meth_</name></member>
      <member refid="class_mongo_object_1ae0438efeae33db2bfeb3972e1196a8a9" prot="public" virt="non-virtual"><scope>Node</scope><name>MongoObject</name></member>
      <member refid="class_mongo_object_1a9e876f9d6e7cfcb7d4ce9046014e2b5f" prot="public" virt="non-virtual"><scope>Node</scope><name>MongoObject</name></member>
      <member refid="class_node_1ad7a34779cad45d997bfd6d3d8043c75f" prot="public" virt="non-virtual"><scope>Node</scope><name>Node</name></member>
      <member refid="class_node_1afceb8877cfab44e0eda5ae3a88513242" prot="public" virt="non-virtual"><scope>Node</scope><name>Node</name></member>
      <member refid="class_node_1acdcee054c893b696b5bc08a8eba1a668" prot="public" virt="non-virtual"><scope>Node</scope><name>Node</name></member>
      <member refid="class_node_1a9ee0e6a44b0e394176e728694122efc9" prot="private" virt="non-virtual"><scope>Node</scope><name>node_valid_</name></member>
      <member refid="class_mongo_object_1a451655d98b9b515d856f7178b46e4b01" prot="protected" virt="non-virtual"><scope>Node</scope><name>object_name</name></member>
      <member refid="class_mongo_object_1a020a40224a752e6036d49ec22474d616" prot="protected" virt="non-virtual"><scope>Node</scope><name>oid_document</name></member>
      <member refid="class_mongo_object_1a4905c165b7b18f471ee56f8eb3f5e0f1" prot="protected" virt="non-virtual"><scope>Node</scope><name>oid_precursor</name></member>
      <member refid="class_mongo_object_1a9592c8baaed700c358dc26025e3bf166" prot="protected" virt="non-virtual"><scope>Node</scope><name>oid_to_string</name></member>
      <member refid="class_mongo_object_1a0050194f5bc8690e0db3b8217086e421" prot="public" virt="non-virtual"><scope>Node</scope><name>operator==</name></member>
      <member refid="class_mongo_object_1a89f7e282816b6dd93d4df4ee7ca9bd0a" prot="public" virt="virtual"><scope>Node</scope><name>operator[]</name></member>
      <member refid="class_node_1a324497db3924989e08e8ee0411d5972e" prot="protected" virt="non-virtual"><scope>Node</scope><name>out_</name></member>
      <member refid="class_node_1abb83a3d891735392a59a1270f4db38fc" prot="private" virt="non-virtual"><scope>Node</scope><name>Port</name></member>
      <member refid="class_node_1ae519513035293daedb1c84b3a150c7c3" prot="private" virt="non-virtual"><scope>Node</scope><name>ports</name></member>
      <member refid="class_node_1a60c605aced4420d3d6f6fe54b5a5b6bb" prot="public" virt="virtual"><scope>Node</scope><name>read_from_db</name></member>
      <member refid="class_mongo_object_1aecd244620f292e8368d1f593925eafbd" prot="protected" virt="non-virtual" ambiguityscope="MongoObject::"><scope>Node</scope><name>read_from_db</name></member>
      <member refid="class_mongo_object_1adce8ffc4811a9d1c94701711f574bc34" prot="public" virt="non-virtual"><scope>Node</scope><name>read_json</name></member>
      <member refid="class_mongo_object_1ac251f38eef739fb9e1418a20e7fcc7f7" prot="public" virt="non-virtual"><scope>Node</scope><name>set_array</name></member>
      <member refid="class_node_1a924146fb76ec67a78971f91e93418527" prot="public" virt="non-virtual"><scope>Node</scope><name>set_callback</name></member>
      <member refid="class_node_1afda492d07d8c3ed0e714d0249e015ffa" prot="public" virt="non-virtual"><scope>Node</scope><name>set_callback</name></member>
      <member refid="class_mongo_object_1adb597533d8e167c3d6bafd28baef349c" prot="protected" virt="non-virtual"><scope>Node</scope><name>set_document</name></member>
      <member refid="class_mongo_object_1ae51714acc607a67518862306fac509ee" prot="protected" virt="non-virtual"><scope>Node</scope><name>set_document</name></member>
      <member refid="class_mongo_object_1ac999ffe6b9b2ca261adff1eaf9da7e98" prot="public" virt="non-virtual"><scope>Node</scope><name>set_name</name></member>
      <member refid="class_node_1ab9fe9ebcddc19a16dc518fd29e584da8" prot="public" virt="non-virtual"><scope>Node</scope><name>set_node_to_invalid</name></member>
      <member refid="class_mongo_object_1a9e80e38e5a4f40754ef48f2504e1613c" prot="public" virt="non-virtual"><scope>Node</scope><name>set_oid</name></member>
      <member refid="class_mongo_object_1a03a0d78b1f206aca81ff746edcd57c81" prot="public" virt="non-virtual"><scope>Node</scope><name>set_singleton</name></member>
      <member refid="class_mongo_object_1ae9bff3fe8b82864f36e6cb7aa8f159b0" prot="protected" virt="non-virtual"><scope>Node</scope><name>string_to_oid</name></member>
      <member refid="class_mongo_object_1a0ced4ff82fbee4e7213715994d690380" prot="protected" virt="non-virtual"><scope>Node</scope><name>time_of_death</name></member>
      <member refid="class_mongo_object_1a71e3fa5196ad3b496d0aa326d61e84e8" prot="protected" virt="non-virtual"><scope>Node</scope><name>uri_string</name></member>
      <member refid="class_node_1ad5cacb320e423275faef1bfc8c7a365b" prot="public" virt="virtual"><scope>Node</scope><name>write_to_db</name></member>
      <member refid="class_mongo_object_1ab43c880a2ae99890946e7edf3d232e5a" prot="protected" virt="non-virtual" ambiguityscope="MongoObject::"><scope>Node</scope><name>write_to_db</name></member>
      <member refid="class_mongo_object_1ac1aba6b5189bca3feb08a698a01c1c30" prot="public" virt="non-virtual"><scope>Node</scope><name>~MongoObject</name></member>
      <member refid="class_node_1aa0840c3cb5c7159be6d992adecd2097c" prot="public" virt="non-virtual"><scope>Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
